['/Users/usr/.config/nvim/init.vim', '/Users/usr/dotfiles/vim/rc/dein.toml', '/Users/usr/dotfiles/vim/rc/dein_lazy.toml']
{"coc.nvim": {"lazy": 0, "rev": "release", "path": "/Users/usr/dotfiles/vim/repos/github.com/neoclide/coc.nvim_release", "repo": "neoclide/coc.nvim", "merged": 0, "normalized_name": "coc", "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/neoclide/coc.nvim_release", "sourced": 1, "name": "coc.nvim"}, "dein.vim": {"lazy": 0, "name": "dein.vim", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/Shougo/dein.vim", "repo": "/Users/usr/dotfiles/vim/repos/github.com/Shougo/dein.vim", "normalized_name": "dein", "type": "git", "local": 1, "merged": 0, "sourced": 1, "path": "/Users/usr/dotfiles/vim/repos/github.com/Shougo/dein.vim"}, "fzf.vim": {"lazy": 0, "path": "/Users/usr/dotfiles/vim/repos/github.com/junegunn/fzf.vim", "depends": ["fzf"], "name": "fzf.vim", "hook_add": "  fun! FzfOmniFiles()\n    let is_git = system('git status')\n    if v:shell_error\n      :Files\n    else\n      :GitFiles\n    endif\n  endfun\n\n  nnoremap <C-b> :Buffers<CR>\n  nnoremap <C-g> :Rg<Space>\n  nnoremap <leader><leader> :Commands<CR>\n  nnoremap <C-p> :call FzfOmniFiles()<CR>\n", "merged": 1, "normalized_name": "fzf", "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/junegunn/fzf.vim", "sourced": 1, "repo": "junegunn/fzf.vim"}, "vim-toml": {"lazy": 1, "path": "/Users/usr/dotfiles/vim/repos/github.com/cespare/vim-toml", "repo": "cespare/vim-toml", "normalized_name": "toml", "merged": 0, "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/cespare/vim-toml", "sourced": 0, "on_ft": ["toml"], "name": "vim-toml"}, "vim-commentary": {"lazy": 0, "on_path": ".*", "name": "vim-commentary", "path": "/Users/usr/dotfiles/vim/repos/github.com/tpope/vim-commentary", "repo": "tpope/vim-commentary", "merged": 1, "normalized_name": "commentary", "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/tpope/vim-commentary", "sourced": 1, "hook_add": "\tnoremap <C-,> gcc\n\tvmap <C-a> gcc<ESC>\n"}, "vim-floaterm": {"lazy": 0, "path": "/Users/usr/dotfiles/vim/repos/github.com/voldikss/vim-floaterm", "repo": "voldikss/vim-floaterm", "normalized_name": "floaterm", "merged": 1, "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/voldikss/vim-floaterm", "sourced": 1, "name": "vim-floaterm"}, "elly.vim": {"lazy": 0, "path": "/Users/usr/dotfiles/vim/repos/github.com/ulwlu/elly.vim", "repo": "ulwlu/elly.vim", "hook_add": "colorscheme elly", "merged": 1, "normalized_name": "elly", "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/ulwlu/elly.vim", "sourced": 1, "name": "elly.vim"}, "rainbow_parentheses.vim": {"lazy": 0, "path": "/Users/usr/dotfiles/vim/repos/github.com/junegunn/rainbow_parentheses.vim", "repo": "junegunn/rainbow_parentheses.vim", "hook_add": "  let g:rainbow#max_level = 16\n  let g:rainbow#pairs = [['(', ')'], ['[', ']']]\n\n  \" List of colors that you do not want. ANSI code or #RRGGBB\n  let g:rainbow#blacklist = [233, 234]\n", "merged": 1, "normalized_name": "rainbow_parentheses", "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/junegunn/rainbow_parentheses.vim", "sourced": 1, "name": "rainbow_parentheses.vim"}, "fzf": {"lazy": 0, "build": "./install --all", "name": "fzf", "repo": "junegunn/fzf", "merged": 0, "normalized_name": "fzf", "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/junegunn/fzf", "sourced": 1, "path": "/Users/usr/dotfiles/vim/repos/github.com/junegunn/fzf"}, "vimtex": {"lazy": 1, "path": "/Users/usr/dotfiles/vim/repos/github.com/lervag/vimtex", "repo": "lervag/vimtex", "normalized_name": "vimtex", "merged": 0, "type": "git", "rtp": "/Users/usr/dotfiles/vim/repos/github.com/lervag/vimtex", "sourced": 0, "on_ft": ["tex"], "name": "vimtex"}}
{}
